import kotlin.Boolean;

-- Table schema
CREATE TABLE reports (
  id           TEXT    NOT NULL PRIMARY KEY,
  userId       TEXT    NOT NULL,
  userName     TEXT    NOT NULL,
  wineryName   TEXT    NOT NULL,
  content      TEXT    NOT NULL,
  imageUrl     TEXT    NOT NULL,
  rating       INTEGER NOT NULL, -- 1-5 stars
  createdAt    INTEGER NOT NULL, -- Long epoch millis
  locationName TEXT,             -- nullable location name
  locationLat  REAL,             -- nullable latitude
  locationLng  REAL              -- nullable longitude
);

-- Optional but recommended: index to speed up "my reports" sorted by recency
CREATE INDEX reports_user_created_idx ON reports(userId, createdAt DESC);

-- Queries

selectAll:
SELECT *
FROM reports
ORDER BY createdAt DESC;

selectByUser:
SELECT *
FROM reports
WHERE userId = ?
ORDER BY createdAt DESC;

selectById:
SELECT *
FROM reports
WHERE id = ?;

insertReport:
INSERT INTO reports(
  id, userId, userName, wineryName, content, imageUrl, rating, createdAt, locationName, locationLat, locationLng
)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

-- Upsert without ON CONFLICT: works with PRIMARY KEY(id)
upsertReport:
INSERT OR REPLACE INTO reports(
  id, userId, userName, wineryName, content, imageUrl, rating, createdAt, locationName, locationLat, locationLng
)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

deleteReport:
DELETE FROM reports WHERE id = ?;